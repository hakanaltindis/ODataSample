// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ODataSample.Data;

#nullable disable

namespace ODataSample.Data.Migrations
{
    [DbContext(typeof(ODataDbContext))]
    partial class ODataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("odata")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ODataSample.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Activities", "odata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description",
                            IsDeleted = false,
                            Name = "October Fest"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Kurban Bayramı"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Ramazan Bayramı"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description",
                            IsDeleted = false,
                            Name = "Yılbaşı"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description",
                            IsDeleted = false,
                            Name = "23 Nisan Ulusal Egemenlik ve Çocuk Bayramı"
                        });
                });

            modelBuilder.Entity("ODataSample.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Customers", "odata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Hakan",
                            IsDeleted = false,
                            LastName = "Altındiş"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Deere"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Joe",
                            IsDeleted = true,
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Sezen",
                            IsDeleted = false,
                            LastName = "Altındiş"
                        });
                });

            modelBuilder.Entity("ODataSample.Entities.CustomerActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerActivities", "odata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityId = 1,
                            CustomerId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            ActivityId = 2,
                            CustomerId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            ActivityId = 4,
                            CustomerId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            ActivityId = 1,
                            CustomerId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            ActivityId = 3,
                            CustomerId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            ActivityId = 5,
                            CustomerId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            ActivityId = 1,
                            CustomerId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            ActivityId = 3,
                            CustomerId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            ActivityId = 2,
                            CustomerId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            ActivityId = 1,
                            CustomerId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 11,
                            ActivityId = 4,
                            CustomerId = 4,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("ODataSample.Entities.CustomerActivity", b =>
                {
                    b.HasOne("ODataSample.Entities.Activity", "Activity")
                        .WithMany("CustomerActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ODataSample.Entities.Customer", "Customer")
                        .WithMany("CustomerActivities")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ODataSample.Entities.Activity", b =>
                {
                    b.Navigation("CustomerActivities");
                });

            modelBuilder.Entity("ODataSample.Entities.Customer", b =>
                {
                    b.Navigation("CustomerActivities");
                });
#pragma warning restore 612, 618
        }
    }
}
